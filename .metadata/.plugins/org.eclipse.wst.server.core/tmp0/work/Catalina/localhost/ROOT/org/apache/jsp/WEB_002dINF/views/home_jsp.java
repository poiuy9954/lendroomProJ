/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2020-06-01 07:56:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Project0518/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/testproj/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1588729185558L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>Home</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<h1>Hello world!</h1>\n");
      out.write("\n");
      out.write("\t<P>The time on the server is ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serverTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".</P>\n");
      out.write("\t\n");
      out.write("\t <input type=\"color\" id=\"bgBtn\" onchange=\"backgroundChange()\">\n");
      out.write("\t<input type=\"color\" id=\"brBtn\" onchange=\"borderChange()\">\n");
      out.write("\t<button id='dataBtn'>ToData</button>\n");
      out.write("\t<section>\n");
      out.write("\t\t<div id=\"mycard\">\n");
      out.write("\t\t\t<canvas id=\"canvas\" width=\"600px\" height=\"600px\"></canvas>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div id=\"sticker\"></div>\n");
      out.write("\t</section>\n");
      out.write("\t<section>\n");
      out.write("\t\t<div id=\"mycard2\">\n");
      out.write("\t\t\t<canvas id=\"canvas\" width=\"600px\" height=\"600px\"></canvas>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div id=\"sticker\"></div>\n");
      out.write("\t</section>\n");
      out.write("</body>\n");
      out.write("<script\n");
      out.write("  src=\"https://code.jquery.com/jquery-3.5.1.js\"\n");
      out.write("  integrity=\"sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=\"\n");
      out.write("  crossorigin=\"anonymous\"></script>\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("var bgBtn = document.getElementById(\"bgBtn\");\n");
      out.write("var brBtn = document.getElementById(\"brBtn\");\n");
      out.write("var canvas =\n");
      out.write("document.getElementById(\"canvas\");\n");
      out.write("var ctx = canvas.getContext('2d');\n");
      out.write("var toData = $('#dataBtn');\n");
      out.write("toData.click(function () {\n");
      out.write("\tconsole.log(canvas.toDataURL());\n");
      out.write("\tvar copyCanvas = document.getElementById(\"canvas\");\n");
      out.write("\tvar copyContext = copyCanvas.getContext('2d');\n");
      out.write("\tvar image = new Image();\n");
      out.write("\timage.src = canvas.toDataURL();\n");
      out.write("\tcopyContext.drawImage(image,0,0);\n");
      out.write("\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("// background color change\n");
      out.write("function backgroundChange() {\n");
      out.write("    ctx.fillStyle = bgBtn.value;\n");
      out.write("    ctx.fillRect(1,1,canvas.width-2, canvas.height-2);\n");
      out.write("}\n");
      out.write("        \n");
      out.write("// border color change\n");
      out.write("function borderChange() {\n");
      out.write("    canvas.style.border = \"none\";\n");
      out.write("    ctx.strokeStyle = brBtn.value;\n");
      out.write("    ctx.strokeRect(0,0, canvas.width, canvas.height);\n");
      out.write("}\n");
      out.write("\t\n");
      out.write("var mycard = document.getElementById(\"mycard\");\n");
      out.write("var canvas = document.getElementById(\"canvas\");\n");
      out.write("var ctx = canvas.getContext('2d');\n");
      out.write("\n");
      out.write("//append imgs\n");
      out.write("for(var i = 1 ; i <= 2 ; i++) {\n");
      out.write("    var img = document.createElement(\"img\");\n");
      out.write("    img.src = 'resources/img/g'+i+'.png';\n");
      out.write("    document.getElementById(\"sticker\").appendChild(img);\n");
      out.write("}  \n");
      out.write("\n");
      out.write("// drag and drop\n");
      out.write("function load() {\n");
      out.write("    var imgs = document.querySelectorAll('img');\n");
      out.write("    for(var i = 0 ; i < imgs.length ; i++) {\n");
      out.write("        imgs[i].setAttribute('draggable',true);\n");
      out.write("        imgs[i].setAttribute('id', 'img");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i+1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\n");
      out.write("        imgs[i].addEventListener('dragstart', drag);\n");
      out.write("    }\n");
      out.write("    canvas.ondragover = function(e) {\n");
      out.write("        e.preventDefault();\n");
      out.write("    }\n");
      out.write("    canvas.addEventListener('drop', drop);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function drag(e){\n");
      out.write("    e.dataTransfer.setData('data', e.target.id);\n");
      out.write("    e.dataTransfer.setDragImage(e.target, 0, 0);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("function drop(e) {\n");
      out.write("    e.preventDefault();\n");
      out.write("    var id=e.dataTransfer.getData('data');\n");
      out.write("    var el=document.getElementById(id);\n");
      out.write("    var posx=e.pageX-this.offsetLeft; // this === e.target\n");
      out.write("    var posy=e.pageY-this.offsetTop;\n");
      out.write("    ctx.drawImage(el, posx-el.width/2+10 , posy-el.height/2+10, el.width * 3/4, el.height * 3/4);\n");
      out.write("    // checked radio button \n");
      out.write("//     for(var i = 0 ; i < radio.length ; i++) {\n");
      out.write("//         if(radio[0].checked === true) {\n");
      out.write("//             //small\n");
      out.write("//             ctx.drawImage(el, posx-el.width/2+10 , posy-el.height/2+10, el.width * 3/4, el.height * 3/4);\n");
      out.write("//         } else if(radio[1].checked === true) {\n");
      out.write("//             //medium\n");
      out.write("//             ctx.drawImage(el, posx-el.width/2 , posy-el.height/2, el.width *1.1, el.height*1.1);\n");
      out.write("//         } else if(radio[2].checked === true) {\n");
      out.write("//             //big\n");
      out.write("//             ctx.drawImage(el, posx-el.width/2 , posy-el.height/2, el.width * 1.5, el.height *1.5);\n");
      out.write("//         }\n");
      out.write("//     }\n");
      out.write("}\n");
      out.write("\n");
      out.write("window.addEventListener('load', load, false);\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
